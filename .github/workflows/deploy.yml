name: FastAPI CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # 1. Check out the code
    - name: Check out code
      uses: actions/checkout@v3

    # 2. Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # 3. Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # 4. Install Docker Compose
    - name: Install Docker Compose
      uses: ndeloof/install-compose-action@v0.0.1

    # 5. Start services with Docker Compose
    - name: Start services
      run: |
        docker compose up -d
        # Install wait-for-it script
        curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
        chmod +x wait-for-it.sh
        # Wait for PostgreSQL to be ready
        ./wait-for-it.sh localhost:5432 -t 60
        # Wait for FastAPI server to be ready
        ./wait-for-it.sh localhost:8000 -t 60

    # 6. Run integration tests
    - name: Run integration tests
      run: |
        # Install test dependencies locally
        pip install pytest requests pytest-cov
        
        # Start the server with coverage
        docker compose exec -T server bash -c "coverage run -m pytest /app/tests/integration --disable-warnings"
        
        # Generate coverage report
        docker compose exec -T server bash -c "coverage report --fail-under=80"

    # 7. Clean up
    - name: Clean up
      run: |
        docker compose down
      if: always()  # This ensures cleanup happens even if tests fail
